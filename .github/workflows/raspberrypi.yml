name: Build the Raspberry Pi Linux kernel

on:
  schedule:
    - cron: "0 */4 * * *"
  workflow_dispatch:
    inputs:
      ref:
        required: false
        type: string
jobs:
  rpi-ref:
    runs-on: ubuntu-24.04
    outputs:
      ref: ${{ inputs.ref || steps.fetch-latest.outputs.ref }}
      version: ${{ steps.parse-version.outputs.version }}
    steps:
      - name: Fetch the latest tag
        id: fetch-latest
        if: ${{ inputs.ref == '' }}
        run: |
          ref=$(git ls-remote --sort=-v:refname --refs https://github.com/raspberrypi/linux.git | awk '$2 ~ /^refs\/heads\/rpi-[0-9]+\.[0-9]+\.y$/ { print substr($2, 12) }' | head -n 1)
          echo "ref=${ref}" >> $GITHUB_OUTPUT
      - name: Parse version
        id: parse-version
        run: |
          ref=${{ inputs.ref || steps.fetch-latest.outputs.ref }}
          if [[ ! $ref =~ ^rpi-[0-9]+\.[0-9]+\.y$ ]]; then
            echo "Unsupported ref format '${ref}'"
            exit 1
          fi
          echo "version=${ref:4:-2}" >> $GITHUB_OUTPUT
  draft-release:
    runs-on: ubuntu-24.04
    needs:
      - rpi-ref
    permissions:
      contents: write
    outputs:
      tag-name: ${{ steps.tag-name.outputs.tag-name }}
      release-id: ${{ steps.create-release.outputs.id }}
    steps:
      - name: Build tag name
        id: tag-name
        run: |
          echo "tag-name=rpi-${{ needs.rpi-ref.outputs.version }}" >> $GITHUB_OUTPUT
      - name: Create a release
        id: create-release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          tag: ${{ steps.tag-name.outputs.tag-name }}
          commit: ${{ github.sha }}
          draft: true
          name: Raspberry Pi Linux kernel ${{ needs.rpi-ref.outputs.version }}
          body: "Raspberry Pi Linux kernel built from the ${{ needs.rpi-ref.outputs.ref }} branch"
          skipIfReleaseExists: true
  build:
    runs-on: ubuntu-24.04
    needs:
      - rpi-ref
      - draft-release
    if: ${{ needs.draft-release.outputs.release-id != '' }}
    strategy:
      matrix:
        include:
          - name: bcmrpi
            arch: arm
            defconfig: bcmrpi_defconfig
          - name: bcm2709
            arch: arm
            defconfig: bcm2709_defconfig
          - name: arm64
            arch: arm64
            defconfig: defconfig
          - name: bcm2711
            arch: arm64
            defconfig: bcm2711_defconfig
          # - name: bcm2712
          #   arch: arm64
          #   defconfig: bcm2712_defconfig
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Build the image
        uses: ./.github/actions/build-image
        with:
          repository: raspberrypi/linux
          ref: ${{ needs.rpi-ref.outputs.ref }}
          version: ${{ needs.rpi-ref.outputs.version }}
          arch: ${{ matrix.arch }}
          release-tag: ${{ needs.draft-release.outputs.tag-name }}
          defconfig: ${{ matrix.defconfig }}
          suffix: ${{ needs.draft-release.outputs.tag-name }}-${{ matrix.name }}
  publish-release:
    runs-on: ubuntu-24.04
    needs:
      - draft-release
      - build
    permissions:
      contents: write
    if: ${{ needs.draft-release.outputs.release-id != '' }}
    steps:
      - name: Publish
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          tag: ${{ needs.draft-release.outputs.tag-name }}
          draft: false
          omitName: true
          omitBody: true
          allowUpdates: true
          updateOnlyUnreleased: true
